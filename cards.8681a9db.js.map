{"version":3,"sources":["scripts/cards.js"],"names":["slider","document","querySelector","sliderLine","cards","querySelectorAll","current","scale","forEach","c","style","transform","width","scroll","offsetWidth","window","innerWidth","addEventListener","nextSlide","length","console","log","prevSlide","xDown","yDown","getTouches","evt","touches","handleTouchStart","firstTouch","clientX","clientY","handleTouchMove","xUp","yUp","xDiff","yDiff","Math","abs","passive"],"mappings":";AAAA,aAEA,IAAMA,EAASC,SAASC,cAAc,iBAChCC,EAAaF,SAASC,cAAc,gBACpCE,EAAQH,SAASI,iBAAiB,0BAEpCC,EAAU,EAEd,SAASC,IACPH,EAAMI,QAAQ,SAAAC,GACZA,EAAEC,MAAMC,UAAY,aACpBF,EAAEC,MAAME,MAAQ,SAElBR,EAAME,GAASI,MAAME,MAAQ,OAC7BR,EAAME,GAASI,MAAMC,UAAY,OAenC,SAASE,IACPV,EAAWO,MAAMC,UACfP,eAAAA,OAAAA,EAAME,GAASQ,YAAcR,EAD/B,OAGAC,IAhBEQ,OAAOC,WAAa,MACtBT,IAGFQ,OAAOE,iBAAiB,SAAU,WAC5BF,OAAOC,WAAa,KACtBT,IAEAH,EAAMI,QAAQ,SAAAC,GAAKA,OAAAA,EAAEC,MAAME,MAAQ,YAWvC,IAAMM,EAAY,WACZZ,EAAUF,EAAMe,SAClBb,IAEAO,KAGFO,QAAQC,IAAIjB,EAAM,GAAGU,cAGjBQ,EAAY,WACZhB,EAAU,IACZA,IAEAO,MAcAU,EAAQ,KACRC,EAAQ,KAEZ,SAASC,EAAWC,GACXA,OAAAA,EAAIC,QAGb,SAASC,EAAiBF,GAClBG,IAAAA,EAAaJ,EAAWC,GAAK,GAEnCH,EAAQM,EAAWC,QACnBN,EAAQK,EAAWE,QAGrB,SAASC,EAAgBN,GACnB,GAACH,GAAUC,EAAX,CAIES,IAAAA,EAAMP,EAAIC,QAAQ,GAAGG,QACrBI,EAAMR,EAAIC,QAAQ,GAAGI,QAErBI,EAAQZ,EAAQU,EAChBG,EAAQZ,EAAQU,EAElBG,GAAAA,KAAKC,IAAIH,GAASE,KAAKC,IAAIF,GACzBD,EAAQ,EACVjB,IAEAI,SAEG,GAAIc,EAAQ,EACjB,OAGFb,EAAQ,KACRC,EAAQ,MAKVxB,EAAOiB,iBAAiB,aAAcW,EAAkB,CAAEW,SAAS,IACnEvC,EAAOiB,iBAAiB,YAAae,EAAiB,CAAEO,SAAS","file":"cards.8681a9db.js","sourceRoot":"..\\src","sourcesContent":["\"use strict\";\n\nconst slider = document.querySelector(\".main__slider\");\nconst sliderLine = document.querySelector(\".main__cards\");\nconst cards = document.querySelectorAll(\".main__cards-container\");\n\nlet current = 0;\n\nfunction scale() {\n  cards.forEach(c => {\n    c.style.transform = \"scale(0.9)\";\n    c.style.width = '55vw';\n  });\n  cards[current].style.width = '68vw';\n  cards[current].style.transform = 'none';\n}\n\nif (window.innerWidth < 1280) {\n  scale();\n}\n\nwindow.addEventListener('resize', () => {\n  if (window.innerWidth < 1280) {\n    scale();\n  } else {\n    cards.forEach(c => c.style.width = '382px');\n  }\n})\n\nfunction scroll() {\n  sliderLine.style.transform = `translateX(-${\n    cards[current].offsetWidth * current\n  }px)`;\n  scale();\n}\n\nconst nextSlide = () => {\n  if (current < cards.length) {\n    current++;\n\n    scroll();\n  }\n\n  console.log(cards[0].offsetWidth);\n};\n\nconst prevSlide = () => {\n  if (current > 0) {\n    current--;\n\n    scroll();\n  }\n};\n\n// navDots.forEach((dot, i) =>\n//   dot.addEventListener(\"click\", () => {\n//     sliderLine.style.transform = `translateX(-${transform[i]}%)`;\n//     current = i;\n\n//     checkActiveDot();\n//     checkActiveButton();\n//   })\n// );\n\nlet xDown = null;\nlet yDown = null;\n\nfunction getTouches(evt) {\n  return evt.touches;\n}\n\nfunction handleTouchStart(evt) {\n  const firstTouch = getTouches(evt)[0];\n\n  xDown = firstTouch.clientX;\n  yDown = firstTouch.clientY;\n}\n\nfunction handleTouchMove(evt) {\n  if (!xDown || !yDown) {\n    return;\n  }\n\n  const xUp = evt.touches[0].clientX;\n  const yUp = evt.touches[0].clientY;\n\n  const xDiff = xDown - xUp;\n  const yDiff = yDown - yUp;\n\n  if (Math.abs(xDiff) > Math.abs(yDiff)) {\n    if (xDiff > 0) {\n      nextSlide();\n    } else {\n      prevSlide();\n    }\n  } else if (yDiff > 0) {\n    return;\n  }\n\n  xDown = null;\n  yDown = null;\n}\n\n// next.addEventListener(\"click\", nextSlide);\n\nslider.addEventListener(\"touchstart\", handleTouchStart, { passive: true });\nslider.addEventListener(\"touchmove\", handleTouchMove, { passive: true });\n"]}